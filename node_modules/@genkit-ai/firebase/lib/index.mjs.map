{"version":3,"sources":["../src/index.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { genkitPlugin, Plugin } from '@genkit-ai/core';\nimport { FirestoreStateStore } from '@genkit-ai/flow';\nimport {\n  GcpLogger,\n  GcpOpenTelemetry,\n  TelemetryConfig,\n} from '@genkit-ai/google-cloud';\nimport { GoogleAuth } from 'google-auth-library';\nimport { FirestoreTraceStore } from './firestoreTraceStore.js';\nexport { defineFirestoreRetriever } from './firestoreRetriever.js';\n\ninterface FirestorePluginParams {\n  projectId?: string;\n  flowStateStore?: {\n    collection?: string;\n    databaseId?: string;\n  };\n  traceStore?: {\n    collection?: string;\n    databaseId?: string;\n  };\n  telemetryConfig?: TelemetryConfig;\n}\n\nexport const firebase: Plugin<[FirestorePluginParams] | []> = genkitPlugin(\n  'firebase',\n  async (params?: FirestorePluginParams) => {\n    const authClient = new GoogleAuth();\n    const gcpOptions = {\n      projectId: params?.projectId || (await authClient.getProjectId()),\n      telemetryConfig: params?.telemetryConfig,\n    };\n    return {\n      flowStateStore: {\n        id: 'firestore',\n        value: new FirestoreStateStore(params?.flowStateStore),\n      },\n      traceStore: {\n        id: 'firestore',\n        value: new FirestoreTraceStore(params?.traceStore),\n      },\n      telemetry: {\n        instrumentation: {\n          id: 'firebase',\n          value: new GcpOpenTelemetry(gcpOptions),\n        },\n        logger: {\n          id: 'firebase',\n          value: new GcpLogger(gcpOptions),\n        },\n      },\n    };\n  }\n);\n"],"mappings":";;;AAgBA,SAAS,oBAA4B;AACrC,SAAS,2BAA2B;AACpC;AAAA,EACE;AAAA,EACA;AAAA,OAEK;AACP,SAAS,kBAAkB;AAC3B,SAAS,2BAA2B;AACpC,SAAS,gCAAgC;AAelC,MAAM,WAAiD;AAAA,EAC5D;AAAA,EACA,CAAO,WAAmC;AACxC,UAAM,aAAa,IAAI,WAAW;AAClC,UAAM,aAAa;AAAA,MACjB,YAAW,iCAAQ,eAAc,MAAM,WAAW,aAAa;AAAA,MAC/D,iBAAiB,iCAAQ;AAAA,IAC3B;AACA,WAAO;AAAA,MACL,gBAAgB;AAAA,QACd,IAAI;AAAA,QACJ,OAAO,IAAI,oBAAoB,iCAAQ,cAAc;AAAA,MACvD;AAAA,MACA,YAAY;AAAA,QACV,IAAI;AAAA,QACJ,OAAO,IAAI,oBAAoB,iCAAQ,UAAU;AAAA,MACnD;AAAA,MACA,WAAW;AAAA,QACT,iBAAiB;AAAA,UACf,IAAI;AAAA,UACJ,OAAO,IAAI,iBAAiB,UAAU;AAAA,QACxC;AAAA,QACA,QAAQ;AAAA,UACN,IAAI;AAAA,UACJ,OAAO,IAAI,UAAU,UAAU;AAAA,QACjC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;","names":[]}